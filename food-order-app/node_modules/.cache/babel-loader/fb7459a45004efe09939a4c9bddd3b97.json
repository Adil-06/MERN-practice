{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\MERN-practice\\\\food-order-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updateItems;\n\n    if (existingCartItem) {\n      const updateItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updateItems = [...state.items];\n      updateItems[existingCartItem] = updateItem;\n    } else {\n      updateItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updateItem,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["F:/projects/MERN-practice/food-order-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updateItems","updateItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCart","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAG;AAFO,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAoB;AACpC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAA0B;AACtB,UAAMC,iBAAiB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA9E;AACA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC1BJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADN,CAA9B;AAGA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AAEA,QAAII,WAAJ;;AACA,QAAID,gBAAJ,EAAsB;AACnB,YAAME,UAAU,GAAG,EACd,GAAGF,gBADW;AAEdJ,QAAAA,MAAM,EAAGI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAFjC,OAAnB;AAICK,MAAAA,WAAW,GAAE,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAb;AACAc,MAAAA,WAAW,CAACD,gBAAD,CAAX,GAAgCE,UAAhC;AACH,KAPD,MAQK;AACJD,MAAAA,WAAW,GAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAd;AAEA;;AAED,WAAO;AACHP,MAAAA,KAAK,EAAGe,UADL;AAEHd,MAAAA,WAAW,EAAGK;AAFX,KAAP;AAIH;;AACD,SAAOP,gBAAP;AACH,CA5BD;;AA8BA,SAASkB,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAmCvB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAnD;;AAEE,QAAMsB,oBAAoB,GAAId,IAAD,IAAU;AACnCa,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAC,KAAN;AAAaE,MAAAA,IAAI,EAAGA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMe,kBAAkB,GAAIV,EAAD,IAAQ;AAC/BQ,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAC,QAAN;AAAgBO,MAAAA,EAAE,EAAGA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMW,WAAW,GAAG;AAChBvB,IAAAA,KAAK,EAACmB,SAAS,CAACnB,KADA;AAEhBC,IAAAA,WAAW,EAAGkB,SAAS,CAAClB,WAFR;AAGhBuB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAGH;AAJG,GAApB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArBQT,Y;;KAAAA,Y;AAuBT,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from 'react'\r\nimport CartContext from './cart-context'\r\n\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount : 0\r\n}\r\nconst cartReducer = (state , action) => {\r\n    if(action.type === 'ADD') {\r\n        const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            item => item.id === action.item.id \r\n        )\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n        let updateItems; \r\n        if (existingCartItem) {\r\n           const updateItem = {\r\n                ...existingCartItem,\r\n                amount : existingCartItem.amount + action.item.amount\r\n            }\r\n            updateItems =[...state.items];\r\n            updateItems[existingCartItem] = updateItem\r\n        }\r\n        else {\r\n         updateItems = state.items.concat(action.item);\r\n        \r\n        }\r\n\r\n        return {\r\n            items : updateItem,\r\n            totalAmount : updateTotalAmount\r\n        }\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\nfunction CartProvider(props) {\r\n\r\n  const [cartState, dispatchCartAction] =  useReducer(cartReducer, defaultCartState)\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type:'ADD', item : item})\r\n    }\r\n    const removeItemFromCart = (id) => {\r\n        dispatchCartAction({type:\"REMOVE\", id : id})\r\n    }\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount : cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem : removeItemFromCart\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}