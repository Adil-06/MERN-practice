{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\MERN-practice\\\\food-order-app\\\\src\\\\components\\\\Meals\\\\MealItem\\\\ItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport classes from './ItemForm.module.css';\nimport Input from '../../UI/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ItemForm(props) {\n  _s();\n\n  const amountInputRef = useRef();\n  const [amountIsValid, setAmountValid] = useState(true);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enterAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enterAmountNumber < 1 || enterAmountNumber > 5) {\n      setAmountValid(false);\n      return;\n    }\n\n    props.onAddToCart(enterAmountNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Amount\",\n        ref: amountInputRef,\n        input: {\n          id: \"amount\",\n          type: \"number\",\n          min: '1',\n          max: '5',\n          step: '1',\n          defaultValue: '1'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" + Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a Valid amount (1-5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ItemForm, \"A9I/DR+vGpVc+uzjsViiMLjZsiQ=\");\n\n_c = ItemForm;\nexport default ItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"sources":["F:/projects/MERN-practice/food-order-app/src/components/Meals/MealItem/ItemForm.js"],"names":["React","useRef","useState","classes","Input","ItemForm","props","amountInputRef","amountIsValid","setAmountValid","submitHandler","event","preventDefault","enteredAmount","current","value","enterAmountNumber","trim","length","onAddToCart","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAMC,cAAc,GAAGN,MAAM,EAA7B;AACA,QAAM,CAACO,aAAD,EAAgBC,cAAhB,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,aAAa,GAAGN,cAAc,CAACO,OAAf,CAAuBC,KAA7C;AACA,UAAMC,iBAAiB,GAAG,CAAEH,aAA5B;;AACA,QAAGA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IAAqCF,iBAAiB,GAAG,CAAzD,IAA8DA,iBAAiB,GAAG,CAArF,EAAyF;AACrFP,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AACH;;AACDH,IAAAA,KAAK,CAACa,WAAN,CAAkBH,iBAAlB;AACH,GATD;;AAUA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAM,MAAA,SAAS,EAAEb,OAAO,CAACiB,IAAzB;AAAgC,MAAA,QAAQ,EAAGV,aAA3C;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAuB,QAAA,GAAG,EAAIH,cAA9B;AACI,QAAA,KAAK,EAAE;AACHc,UAAAA,EAAE,EAAE,QADD;AACYC,UAAAA,IAAI,EAAE,QADlB;AAC6BC,UAAAA,GAAG,EAAE,GADlC;AACwCC,UAAAA,GAAG,EAAE,GAD7C;AAEHC,UAAAA,IAAI,EAAE,GAFH;AAEQC,UAAAA,YAAY,EAAE;AAFtB;AADX;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAOM,CAAClB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA7BQH,Q;;KAAAA,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import React, {useRef, useState} from 'react'\r\nimport classes from './ItemForm.module.css'\r\nimport Input from '../../UI/Input'\r\n\r\nfunction ItemForm(props) {\r\n\r\n    const amountInputRef = useRef();\r\n    const [amountIsValid, setAmountValid] = useState(true)\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        const enteredAmount = amountInputRef.current.value;\r\n        const enterAmountNumber = + enteredAmount;\r\n        if(enteredAmount.trim().length === 0 || enterAmountNumber < 1 || enterAmountNumber > 5 ) {\r\n            setAmountValid(false);\r\n            return;\r\n        }\r\n        props.onAddToCart(enterAmountNumber)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <form className={classes.form } onSubmit= {submitHandler}>\r\n                <Input lable='Amount'  ref ={ amountInputRef}\r\n                    input={{\r\n                        id: \"amount\",  type: \"number\",  min: '1',  max: '5',\r\n                        step: '1', defaultValue: '1'\r\n                    }}/>\r\n                <button> + Add </button>\r\n                { !amountIsValid && <p>Please enter a Valid amount (1-5)</p>}\r\n            </form>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ItemForm\r\n"]},"metadata":{},"sourceType":"module"}